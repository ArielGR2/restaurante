package restaurante.Vistas;

import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Calendar;
import java.util.Comparator;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import restaurante.AccesoDatos.MesaData;
import restaurante.AccesoDatos.ReservaData;
import restaurante.Entidades.Mesa;
import restaurante.Entidades.Reserva;

public class FormularioReserva extends javax.swing.JInternalFrame {

    MesaData mData = new MesaData();
    ReservaData rData = new ReservaData();
    GestorReservas gReservas;

    /**
     * Creates new form FormularioEmpleados
     */
    public FormularioReserva(GestorReservas gReservas) {
        initComponents();
        this.gReservas = gReservas;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        background = new javax.swing.JPanel();
        titulo = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLDni = new javax.swing.JLabel();
        jTextDni = new javax.swing.JTextField();
        jLNombre = new javax.swing.JLabel();
        jTextNombre = new javax.swing.JTextField();
        jLFecha = new javax.swing.JLabel();
        jDateFecha = new com.toedter.calendar.JDateChooser();
        jLHora = new javax.swing.JLabel();
        jComboHora = new javax.swing.JComboBox<>();
        jLCantidad = new javax.swing.JLabel();
        crearBtn = new javax.swing.JPanel();
        jLCrear = new javax.swing.JLabel();
        cancelarBtn = new javax.swing.JPanel();
        jLCancelar = new javax.swing.JLabel();
        jTextCantidad = new javax.swing.JTextField();

        setBackground(new java.awt.Color(25, 25, 25));
        setBorder(null);
        setPreferredSize(new java.awt.Dimension(300, 400));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        background.setBackground(new java.awt.Color(25, 25, 25));
        background.setForeground(new java.awt.Color(204, 204, 204));

        titulo.setBackground(new java.awt.Color(25, 25, 25));
        titulo.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        titulo.setForeground(new java.awt.Color(204, 204, 204));
        titulo.setText("AGREGAR RESERVA");

        jSeparator1.setBackground(new java.awt.Color(204, 204, 204));

        jLDni.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLDni.setForeground(new java.awt.Color(204, 204, 204));
        jLDni.setText("DNI");

        jTextDni.setBackground(new java.awt.Color(102, 102, 102));
        jTextDni.setForeground(new java.awt.Color(204, 204, 204));

        jLNombre.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLNombre.setForeground(new java.awt.Color(204, 204, 204));
        jLNombre.setText("Nombre");

        jTextNombre.setBackground(new java.awt.Color(102, 102, 102));
        jTextNombre.setForeground(new java.awt.Color(204, 204, 204));

        jLFecha.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLFecha.setForeground(new java.awt.Color(204, 204, 204));
        jLFecha.setText("Fecha");

        jDateFecha.setBackground(new java.awt.Color(25, 25, 25));
        jDateFecha.setForeground(new java.awt.Color(204, 204, 204));

        jLHora.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLHora.setForeground(new java.awt.Color(204, 204, 204));
        jLHora.setText("Hora");

        jComboHora.setBackground(new java.awt.Color(25, 25, 25));
        jComboHora.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jComboHora.setForeground(new java.awt.Color(204, 204, 204));
        jComboHora.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "12:00", "13:00", "14:00", "15:00", "16:00", "17:00", "18:00", "19:00", "20:00", "21:00", "22:00" }));

        jLCantidad.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLCantidad.setForeground(new java.awt.Color(204, 204, 204));
        jLCantidad.setText("Cant. Personas");

        crearBtn.setBackground(new java.awt.Color(51, 51, 51));
        crearBtn.setForeground(new java.awt.Color(51, 51, 51));
        crearBtn.setMaximumSize(new java.awt.Dimension(100, 30));
        crearBtn.setMinimumSize(new java.awt.Dimension(100, 30));
        crearBtn.setPreferredSize(new java.awt.Dimension(100, 30));

        jLCrear.setBackground(new java.awt.Color(51, 51, 51));
        jLCrear.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLCrear.setForeground(new java.awt.Color(204, 204, 204));
        jLCrear.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLCrear.setText("CREAR");
        jLCrear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLCrear.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLCrear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLCrearMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout crearBtnLayout = new javax.swing.GroupLayout(crearBtn);
        crearBtn.setLayout(crearBtnLayout);
        crearBtnLayout.setHorizontalGroup(
            crearBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLCrear, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );
        crearBtnLayout.setVerticalGroup(
            crearBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLCrear, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
        );

        cancelarBtn.setBackground(new java.awt.Color(51, 51, 51));
        cancelarBtn.setForeground(new java.awt.Color(51, 51, 51));
        cancelarBtn.setMaximumSize(new java.awt.Dimension(100, 30));
        cancelarBtn.setMinimumSize(new java.awt.Dimension(100, 30));
        cancelarBtn.setPreferredSize(new java.awt.Dimension(100, 30));

        jLCancelar.setBackground(new java.awt.Color(51, 51, 51));
        jLCancelar.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLCancelar.setForeground(new java.awt.Color(204, 204, 204));
        jLCancelar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLCancelar.setText("CANCELAR");
        jLCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLCancelarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout cancelarBtnLayout = new javax.swing.GroupLayout(cancelarBtn);
        cancelarBtn.setLayout(cancelarBtnLayout);
        cancelarBtnLayout.setHorizontalGroup(
            cancelarBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );
        cancelarBtnLayout.setVerticalGroup(
            cancelarBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLCancelar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTextCantidad.setBackground(new java.awt.Color(102, 102, 102));
        jTextCantidad.setForeground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout backgroundLayout = new javax.swing.GroupLayout(background);
        background.setLayout(backgroundLayout);
        backgroundLayout.setHorizontalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundLayout.createSequentialGroup()
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backgroundLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, backgroundLayout.createSequentialGroup()
                                .addComponent(jLCantidad)
                                .addGap(18, 18, 18)
                                .addComponent(jTextCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(backgroundLayout.createSequentialGroup()
                                    .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLHora, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(46, 46, 46)
                                    .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jDateFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jComboHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(backgroundLayout.createSequentialGroup()
                                    .addComponent(jLDni, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(46, 46, 46)
                                    .addComponent(jTextDni, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(backgroundLayout.createSequentialGroup()
                                    .addComponent(jLNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(45, 45, 45)
                                    .addComponent(jTextNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, backgroundLayout.createSequentialGroup()
                                .addComponent(crearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(45, 45, 45)
                                .addComponent(cancelarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addGroup(backgroundLayout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(titulo)))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        backgroundLayout.setVerticalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(titulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextNombre)
                    .addComponent(jLNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLDni, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextDni, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jDateFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLHora, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboHora))
                .addGap(18, 18, 18)
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLCantidad)
                    .addComponent(jTextCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cancelarBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(crearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 300, 380));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLCancelarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLCancelarMouseClicked
        cerrarVentana();
    }//GEN-LAST:event_jLCancelarMouseClicked

    private void jLCrearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLCrearMouseClicked
        try {
            String nombre = jTextNombre.getText();
            int dni = Integer.parseInt(jTextDni.getText());
            String fecha = String.valueOf(jDateFecha.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate());
            String hora = (String) jComboHora.getSelectedItem();
            int cantPersonas = Integer.parseInt(jTextCantidad.getText());
            int capacidadLocal = mData.calcularCapacidadTotalMesasLibres();

            if (verificarString(nombre) && cantPersonas < capacidadLocal) {

                Mesa mesa = mData.buscarMesaxCapacidad(cantPersonas);

                if (mesa != null) {
                    Reserva reserva = new Reserva(nombre, dni, (fecha + " " + hora), cantPersonas, mesa);
                    rData.agregarReserva(reserva);
                } else {
                    List<Mesa> mesasDisponibles = mData.listarMesasLibres();

                    for (Mesa m : mesasDisponibles) {
                        if (cantPersonas > 0) {
                            int personasAcomodadas = Math.min(cantPersonas, m.getCapacidad());
                            Reserva reserva = new Reserva(nombre, dni, (fecha + " " + hora), personasAcomodadas, m);
                            rData.agregarReserva(reserva);

                            cantPersonas -= personasAcomodadas;
                        }
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, "No hay mesas disponibles para " + cantPersonas + " personas en este momento. Solo tenemos " + capacidadLocal + " asientos disponibles.");
            }
            cerrarVentana();
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(this, "Introducir solo números enteros.");
        } catch (NullPointerException npe) {
            JOptionPane.showMessageDialog(this, "No debe haber campos vacíos");
        }
    }//GEN-LAST:event_jLCrearMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel background;
    private javax.swing.JPanel cancelarBtn;
    private javax.swing.JPanel crearBtn;
    private javax.swing.JComboBox<String> jComboHora;
    private com.toedter.calendar.JDateChooser jDateFecha;
    private javax.swing.JLabel jLCancelar;
    private javax.swing.JLabel jLCantidad;
    private javax.swing.JLabel jLCrear;
    private javax.swing.JLabel jLDni;
    private javax.swing.JLabel jLFecha;
    private javax.swing.JLabel jLHora;
    private javax.swing.JLabel jLNombre;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextCantidad;
    private javax.swing.JTextField jTextDni;
    private javax.swing.JTextField jTextNombre;
    private javax.swing.JLabel titulo;
    // End of variables declaration//GEN-END:variables

    private void cerrarVentana() {
        dispose();
        gReservas.cargarTabla();
    }

    private boolean verificarString(String texto) {
        if (texto.isEmpty()) {
            return false;
        }
        for (int i = 0; i < texto.length(); i++) {
            char letra = texto.charAt(i);
            if ((letra < 65 || letra > 90) && (letra < 97 || letra > 122)) {
                return false;
            }
        }
        return true;
    }

//    private Date fechaHora() {
//        Date fecha = jDateFecha.getDate();
//        String hora = (String) jComboHora.getSelectedItem();
//
//        String[] partesHora = hora.split(":");
//        int horas = Integer.parseInt(partesHora[0]);
//        int minutos = Integer.parseInt(partesHora[1]);
//
//        Calendar combo = Calendar.getInstance();
//        combo.setTime(fecha);
//        combo.set(Calendar.HOUR_OF_DAY, horas);
//        combo.set(Calendar.MINUTE, minutos);
//
//        return combo.getTime();
//    }
}
