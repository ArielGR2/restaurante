package restaurante.Vistas;

import java.awt.Color;
import java.awt.Component;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JDesktopPane;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import restaurante.AccesoDatos.ProductoData;
import restaurante.Entidades.Producto;

public class GestorProductos extends javax.swing.JInternalFrame {

    ProductoData pData = new ProductoData();
    private static final int FILTRO_MIN = 1;
    private static final int FILTRO_MAX = 9999999;
    private static final int ALERTA_STOCK = 100;
    private boolean BUSCANDO = false;

    private DefaultTableModel modelo = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int x, int y) {
            return false;
        }

        @Override
        public Class<?> getColumnClass(int c) {
            if (c == 0 || c == 2) {
                return Integer.class; 
            }
            else if (c == 3) {
                return Double.class;
            }else{
                return String.class;
            }
        }
        
    };

    public class ColorearStock extends DefaultTableCellRenderer {

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
            int stock = Integer.parseInt(value.toString());
            if (stock < ALERTA_STOCK) {
                c.setForeground(Color.RED);
            } else {
                c.setForeground(new java.awt.Color(60,63,65));
            }
            ((JLabel) c).setHorizontalAlignment(JLabel.CENTER); // Centra el contenido en la celda;
            return c;
        }
    }

    /**
     * Creates new form EmpleadoVistas
     */
    public GestorProductos() {
        initComponents();
        cabeceraTabla();
        cargarTabla();
        desactivarFiltros();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLFPNombre = new javax.swing.JLabel();
        jTFPNombre = new javax.swing.JTextField();
        jLFPStock = new javax.swing.JLabel();
        jLFPStockAdd = new javax.swing.JLabel();
        jTFPStockMin = new javax.swing.JTextField();
        jTFPStockMax = new javax.swing.JTextField();
        jLFPPrecio = new javax.swing.JLabel();
        jLFPPrecioAdd = new javax.swing.JLabel();
        jTFPPrecioMin = new javax.swing.JTextField();
        jTFPPrecioMax = new javax.swing.JTextField();
        buscarBtn = new javax.swing.JPanel();
        jLBuscar = new javax.swing.JLabel();
        LimpiarBtn = new javax.swing.JPanel();
        jLLimpiar = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTProductos = new javax.swing.JTable();
        agregarBtn = new javax.swing.JPanel();
        jLAgregar = new javax.swing.JLabel();
        modificarBtn = new javax.swing.JPanel();
        jLModificar = new javax.swing.JLabel();
        eliminarBtn = new javax.swing.JPanel();
        jLEliminar = new javax.swing.JLabel();
        jCBFPNombre = new javax.swing.JCheckBox();
        jCBFPPrecio = new javax.swing.JCheckBox();
        jCBFPStock = new javax.swing.JCheckBox();

        setClosable(true);
        setTitle("Gestor de Productos");
        setToolTipText("");
        setMaximumSize(new java.awt.Dimension(500, 500));
        setNormalBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setPreferredSize(new java.awt.Dimension(500, 500));

        jPanel1.setBackground(new java.awt.Color(25, 25, 25));
        jPanel1.setMaximumSize(new java.awt.Dimension(500, 500));
        jPanel1.setMinimumSize(new java.awt.Dimension(500, 500));
        jPanel1.setPreferredSize(new java.awt.Dimension(500, 500));

        jLFPNombre.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLFPNombre.setForeground(new java.awt.Color(204, 204, 204));
        jLFPNombre.setText("Filtrar por Nombre");

        jTFPNombre.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTFPNombre.setText("Ingresa el nombre del producto");
        jTFPNombre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFPNombreFocusLost(evt);
            }
        });
        jTFPNombre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTFPNombreMouseReleased(evt);
            }
        });
        jTFPNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFPNombreKeyReleased(evt);
            }
        });

        jLFPStock.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLFPStock.setForeground(new java.awt.Color(204, 204, 204));
        jLFPStock.setText("Filtrar por Stock");

        jLFPStockAdd.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLFPStockAdd.setForeground(new java.awt.Color(204, 204, 204));
        jLFPStockAdd.setText("y");

        jTFPStockMin.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTFPStockMin.setText("MIN");
        jTFPStockMin.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFPStockMinFocusLost(evt);
            }
        });
        jTFPStockMin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTFPStockMinMouseReleased(evt);
            }
        });
        jTFPStockMin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFPStockMinKeyReleased(evt);
            }
        });

        jTFPStockMax.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTFPStockMax.setText("MAX");
        jTFPStockMax.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFPStockMaxFocusLost(evt);
            }
        });
        jTFPStockMax.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTFPStockMaxMouseReleased(evt);
            }
        });
        jTFPStockMax.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFPStockMaxKeyReleased(evt);
            }
        });

        jLFPPrecio.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLFPPrecio.setForeground(new java.awt.Color(204, 204, 204));
        jLFPPrecio.setText("Filtrar por Precio");

        jLFPPrecioAdd.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLFPPrecioAdd.setForeground(new java.awt.Color(204, 204, 204));
        jLFPPrecioAdd.setText("y");

        jTFPPrecioMin.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTFPPrecioMin.setText("MIN");
        jTFPPrecioMin.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFPPrecioMinFocusLost(evt);
            }
        });
        jTFPPrecioMin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTFPPrecioMinMouseReleased(evt);
            }
        });
        jTFPPrecioMin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFPPrecioMinKeyReleased(evt);
            }
        });

        jTFPPrecioMax.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTFPPrecioMax.setText("MAX");
        jTFPPrecioMax.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFPPrecioMaxFocusLost(evt);
            }
        });
        jTFPPrecioMax.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTFPPrecioMaxMouseReleased(evt);
            }
        });
        jTFPPrecioMax.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFPPrecioMaxKeyReleased(evt);
            }
        });

        buscarBtn.setBackground(new java.awt.Color(51, 51, 51));
        buscarBtn.setForeground(new java.awt.Color(204, 204, 204));
        buscarBtn.setEnabled(false);

        jLBuscar.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLBuscar.setForeground(new java.awt.Color(204, 204, 204));
        jLBuscar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLBuscar.setText("Buscar");
        jLBuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLBuscar.setEnabled(false);
        jLBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBuscarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout buscarBtnLayout = new javax.swing.GroupLayout(buscarBtn);
        buscarBtn.setLayout(buscarBtnLayout);
        buscarBtnLayout.setHorizontalGroup(
            buscarBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLBuscar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
        );
        buscarBtnLayout.setVerticalGroup(
            buscarBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
        );

        LimpiarBtn.setBackground(new java.awt.Color(51, 51, 51));
        LimpiarBtn.setForeground(new java.awt.Color(204, 204, 204));
        LimpiarBtn.setEnabled(false);

        jLLimpiar.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLLimpiar.setForeground(new java.awt.Color(204, 204, 204));
        jLLimpiar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLLimpiar.setText("Limpiar");
        jLLimpiar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLLimpiar.setEnabled(false);
        jLLimpiar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLLimpiarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout LimpiarBtnLayout = new javax.swing.GroupLayout(LimpiarBtn);
        LimpiarBtn.setLayout(LimpiarBtnLayout);
        LimpiarBtnLayout.setHorizontalGroup(
            LimpiarBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLLimpiar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
        );
        LimpiarBtnLayout.setVerticalGroup(
            LimpiarBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLLimpiar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
        );

        jScrollPane1.setForeground(new java.awt.Color(60, 63, 65));

        jTProductos.setForeground(new java.awt.Color(60, 63, 65));
        jTProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTProductos.setSelectionForeground(new java.awt.Color(204, 204, 204));
        jTProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTProductosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTProductos);

        agregarBtn.setBackground(new java.awt.Color(51, 51, 51));
        agregarBtn.setForeground(new java.awt.Color(51, 51, 51));

        jLAgregar.setBackground(new java.awt.Color(51, 51, 51));
        jLAgregar.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLAgregar.setForeground(new java.awt.Color(204, 204, 204));
        jLAgregar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLAgregar.setText("AGREGAR");
        jLAgregar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLAgregar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLAgregarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout agregarBtnLayout = new javax.swing.GroupLayout(agregarBtn);
        agregarBtn.setLayout(agregarBtnLayout);
        agregarBtnLayout.setHorizontalGroup(
            agregarBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLAgregar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
        );
        agregarBtnLayout.setVerticalGroup(
            agregarBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLAgregar, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
        );

        modificarBtn.setBackground(new java.awt.Color(51, 51, 51));
        modificarBtn.setEnabled(false);

        jLModificar.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLModificar.setForeground(new java.awt.Color(204, 204, 204));
        jLModificar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLModificar.setText("MODIFICAR");
        jLModificar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLModificar.setEnabled(false);
        jLModificar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLModificarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout modificarBtnLayout = new javax.swing.GroupLayout(modificarBtn);
        modificarBtn.setLayout(modificarBtnLayout);
        modificarBtnLayout.setHorizontalGroup(
            modificarBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLModificar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
        );
        modificarBtnLayout.setVerticalGroup(
            modificarBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLModificar, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
        );

        eliminarBtn.setBackground(new java.awt.Color(51, 51, 51));
        eliminarBtn.setForeground(new java.awt.Color(204, 204, 204));
        eliminarBtn.setEnabled(false);

        jLEliminar.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLEliminar.setForeground(new java.awt.Color(204, 204, 204));
        jLEliminar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLEliminar.setText("ELIMINAR");
        jLEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLEliminar.setEnabled(false);
        jLEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLEliminarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout eliminarBtnLayout = new javax.swing.GroupLayout(eliminarBtn);
        eliminarBtn.setLayout(eliminarBtnLayout);
        eliminarBtnLayout.setHorizontalGroup(
            eliminarBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLEliminar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
        );
        eliminarBtnLayout.setVerticalGroup(
            eliminarBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
        );

        jCBFPNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBFPNombreActionPerformed(evt);
            }
        });

        jCBFPPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBFPPrecioActionPerformed(evt);
            }
        });

        jCBFPStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBFPStockActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(agregarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(modificarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(eliminarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jCBFPNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCBFPPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCBFPStock, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLFPPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTFPPrecioMin, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLFPPrecioAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(2, 2, 2)
                                        .addComponent(jTFPPrecioMax, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(LimpiarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLFPStock, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTFPStockMin, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLFPStockAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(2, 2, 2)
                                        .addComponent(jTFPStockMax, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(buscarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLFPNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTFPNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCBFPNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTFPNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLFPNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(LimpiarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jCBFPStock, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLFPStock, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTFPStockMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTFPStockMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLFPStockAdd))
                            .addComponent(buscarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLFPPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTFPPrecioMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTFPPrecioMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLFPPrecioAdd))
                            .addComponent(jCBFPPrecio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(9, 9, 9)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(agregarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(modificarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eliminarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLAgregarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLAgregarMouseClicked
        FormularioProductos formulario = new FormularioProductos(this);
        JDesktopPane desktopPane = getDesktopPane();

        desktopPane.add(formulario);

        int x = (desktopPane.getWidth() - formulario.getWidth()) / 2;
        int y = (desktopPane.getHeight() - formulario.getHeight()) / 2;

        formulario.setLocation(x, y);
        formulario.setVisible(true);
    }//GEN-LAST:event_jLAgregarMouseClicked

    private void jLModificarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLModificarMouseClicked
/*        int filas = jTProductos.getRowCount();
        List<Empleado> pendientes = new ArrayList<>();

        for (int f = 0; f < filas; f++) {
            int idFila = (Integer) modelo.getValueAt(f, 0);
            int dni = (Integer) modelo.getValueAt(f, 1);
            String nombre = (String) modelo.getValueAt(f, 2);
            String apellido = (String) modelo.getValueAt(f, 3);

            if (!verificarString(nombre) || !verificarString(apellido)) {
                JOptionPane.showMessageDialog(this, "Error en: "+ idFila +"\nEl NOMBRE y/o APELLIDO no debe estar vacío y solo contener letras.");
                continue;
            }
            //Revisamos si hay modificación, si la hay agregamos el empleado a un array de pendientes a actualizar, si no el array queda vacío.
            for (Empleado e : eData.listarEmpleadosActivos()) {
                if (e.getIdEmpleado() == idFila && (e.getDni() != dni || !e.getNombre().equals(nombre) || !e.getApellido().equals(apellido))) {
                    e.setDni(dni);
                    e.setNombre(nombre);
                    e.setApellido(apellido);
                    eData.modificarEmpleado(e);
                    pendientes.add(e);
                }
            }
        }
        //Si el array está vacío no hay modificaciones
        if (pendientes.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No hay modificaciones.");
            return;
        }*/
    }//GEN-LAST:event_jLModificarMouseClicked

    private void jLEliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLEliminarMouseClicked
        int id = (Integer) modelo.getValueAt(jTProductos.getSelectedRow(), 0);
        pData.eliminarProducto(id);
        cargarTabla();
    }//GEN-LAST:event_jLEliminarMouseClicked

    private void jTProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTProductosMouseClicked
        // TODO add your handling code here:
        jLEliminar.setEnabled(true);
        eliminarBtn.setEnabled(true);
        jLModificar.setEnabled(true);
        modificarBtn.setEnabled(true);

    }//GEN-LAST:event_jTProductosMouseClicked

    private void jTFPNombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFPNombreKeyReleased
        // TODO add your handling code here:
        eliminarFilas();
        String texto = jTFPNombre.getText().toLowerCase();
        for (Producto prod : pData.listarProductos()) {
            String nombre = prod.getNombre().toLowerCase();
            if (nombre.startsWith(texto)) {
                modelo.addRow(new Object[]{
                    prod.getIdProducto(),
                    prod.getNombre(),
                    prod.getStock(),
                    "$"+prod.getPrecio(),
                    prod.isDisponible() == true ? "Si " : "No "
                });
            }
        }
        if (jTProductos.getRowCount() == 0){
            JOptionPane.showMessageDialog(this, "No se han encontrado productos. ");
            jTFPNombre.setText(jTFPNombre.getText().substring(0, jTFPNombre.getText().length()-1));
            jTFPNombreKeyReleased(evt);
        }
    }//GEN-LAST:event_jTFPNombreKeyReleased

    private void jTFPStockMinFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFPStockMinFocusLost
        // TODO add your handling code here:
        if (jTFPStockMin.getText().isEmpty()){
            jTFPStockMin.setText("MIN");
        }
        
        if (numTFVerificacion(jTFPStockMin.getText())) {
           jTFPStockMin.setText(correccionFiltros(jTFPStockMin.getText(),jTFPStockMax.getText(),"MAX",FILTRO_MAX));
        }
    }//GEN-LAST:event_jTFPStockMinFocusLost

    private void jTFPStockMaxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFPStockMaxFocusLost
        // TODO add your handling code here:
        if (jTFPStockMax.getText().isEmpty()){
            jTFPStockMax.setText("MAX");
        }
        
        if (numTFVerificacion(jTFPStockMax.getText())) {
           jTFPStockMax.setText(correccionFiltros(jTFPStockMax.getText(),jTFPStockMin.getText(),"MIN",FILTRO_MIN));
        }
    }//GEN-LAST:event_jTFPStockMaxFocusLost
    // PRECIO
    private void jTFPPrecioMinFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFPPrecioMinFocusLost
        // TODO add your handling code here:
        if (jTFPPrecioMin.getText().isEmpty()){
            jTFPPrecioMin.setText("MIN");
        }
        
        if (numTFVerificacion(jTFPPrecioMin.getText())) {
           jTFPPrecioMin.setText(correccionFiltros(jTFPPrecioMin.getText(),jTFPPrecioMax.getText(),"MAX",FILTRO_MAX));
        }
    }//GEN-LAST:event_jTFPPrecioMinFocusLost

    private void jTFPPrecioMaxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFPPrecioMaxFocusLost
        // TODO add your handling code here:
        if (jTFPPrecioMax.getText().isEmpty()){
            jTFPPrecioMax.setText("MAX");
        }
        
        if (numTFVerificacion(jTFPPrecioMax.getText())) {
           jTFPPrecioMax.setText(correccionFiltros(jTFPPrecioMax.getText(),jTFPPrecioMin.getText(),"MIN",FILTRO_MIN));
        }
    }//GEN-LAST:event_jTFPPrecioMaxFocusLost

   // Limpia la vista de filtros
    private void jLLimpiarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLLimpiarMouseClicked
        // TODO add your handling code here:
        jTFPNombre.setText("Ingresa el nombre del producto");
        jTFPPrecioMax.setText("MAX");
        jTFPPrecioMin.setText("MIN");
        jTFPStockMax.setText("MAX");
        jTFPStockMin.setText("MIN");
        desactivarFiltros();
        cargarTabla();
    }//GEN-LAST:event_jLLimpiarMouseClicked

    private void jCBFPNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBFPNombreActionPerformed
        // TODO add your handling code here:
        if (jCBFPNombre.isSelected()){
            jLFPNombre.setEnabled(true);
            jTFPNombre.setEnabled(true);
        }else{
            jLFPNombre.setEnabled(false);
            jTFPNombre.setEnabled(false);
        }
        filtroSeleccionado();
    }//GEN-LAST:event_jCBFPNombreActionPerformed
    // ACTIVAR COMBOBOX
    private void jCBFPStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBFPStockActionPerformed
        // TODO add your handling code here:
        if (jCBFPStock.isSelected()){
            jLFPStock.setEnabled(true);
            jLFPStockAdd.setEnabled(true);
            jTFPStockMax.setEnabled(true);
            jTFPStockMin.setEnabled(true);
        }else{
            jLFPStock.setEnabled(false);
            jLFPStockAdd.setEnabled(false);
            jTFPStockMax.setEnabled(false);
            jTFPStockMin.setEnabled(false);
        }
        filtroSeleccionado();
    }//GEN-LAST:event_jCBFPStockActionPerformed

    private void jCBFPPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBFPPrecioActionPerformed
        // TODO add your handling code here:
        if (jCBFPPrecio.isSelected()){
            jLFPPrecio.setEnabled(true);
            jLFPPrecioAdd.setEnabled(true);
            jTFPPrecioMax.setEnabled(true);
            jTFPPrecioMin.setEnabled(true);
        }else{
            jLFPPrecio.setEnabled(false);
            jLFPPrecioAdd.setEnabled(false);
            jTFPPrecioMax.setEnabled(false);
            jTFPPrecioMin.setEnabled(false);
        }
        filtroSeleccionado();
    }//GEN-LAST:event_jCBFPPrecioActionPerformed
    // EVENTOS AL TECLEAR
    private void jTFPStockMinKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFPStockMinKeyReleased
        // TODO add your handling code here:
        if (!checkFiltroNum(evt.getKeyChar())){
            jTFPStockMin.setText(jTFPStockMin.getText().substring(0, jTFPStockMin.getText().length()-1));
        }
    }//GEN-LAST:event_jTFPStockMinKeyReleased

    private void jTFPStockMaxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFPStockMaxKeyReleased
        // TODO add your handling code here:
        if (!checkFiltroNum(evt.getKeyChar())){
            jTFPStockMax.setText(jTFPStockMax.getText().substring(0, jTFPStockMax.getText().length()-1));
        }
    }//GEN-LAST:event_jTFPStockMaxKeyReleased

    private void jTFPPrecioMinKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFPPrecioMinKeyReleased
        // TODO add your handling code here:
        if (!checkFiltroNum(evt.getKeyChar())){
            jTFPPrecioMin.setText(jTFPPrecioMin.getText().substring(0, jTFPPrecioMin.getText().length()-1));
        }
    }//GEN-LAST:event_jTFPPrecioMinKeyReleased

    private void jTFPPrecioMaxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFPPrecioMaxKeyReleased
        // TODO add your handling code here:
        if (!checkFiltroNum(evt.getKeyChar())){
            jTFPPrecioMax.setText(jTFPPrecioMax.getText().substring(0, jTFPPrecioMax.getText().length()-1));
        }
    }//GEN-LAST:event_jTFPPrecioMaxKeyReleased
    /// EVENTOS AL CLICKEAR
    private void jTFPStockMinMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTFPStockMinMouseReleased
        // TODO add your handling code here:
        if (!jTFPStockMin.isEnabled()){
            return;
        }
        if (!numTFVerificacion(jTFPStockMin.getText())) {
            jTFPStockMin.setText("");
        }
    }//GEN-LAST:event_jTFPStockMinMouseReleased

    private void jTFPStockMaxMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTFPStockMaxMouseReleased
        // TODO add your handling code here:
        if (!jTFPStockMax.isEnabled()){
            return;
        }
        if (!numTFVerificacion(jTFPStockMax.getText())) {
            jTFPStockMax.setText("");
        }
    }//GEN-LAST:event_jTFPStockMaxMouseReleased

    private void jTFPPrecioMinMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTFPPrecioMinMouseReleased
        // TODO add your handling code here:
        if (!jTFPPrecioMin.isEnabled()){
            return;
        }
        if (!numTFVerificacion(jTFPPrecioMin.getText())) {
            jTFPPrecioMin.setText("");
        }
    }//GEN-LAST:event_jTFPPrecioMinMouseReleased

    private void jTFPPrecioMaxMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTFPPrecioMaxMouseReleased
        // TODO add your handling code here:
        if (!jTFPPrecioMax.isEnabled()){
            return;
        }
        if (!numTFVerificacion(jTFPPrecioMax.getText())) {
            jTFPPrecioMax.setText("");
        }
    }//GEN-LAST:event_jTFPPrecioMaxMouseReleased

    private void jTFPNombreMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTFPNombreMouseReleased
        // TODO add your handling code here:
        if (!jTFPNombre.isEnabled()){
            return;
        }

        if (jTFPNombre.getText().equals("Ingresa el nombre del producto")) {
            jTFPNombre.setText("");
        }
    }//GEN-LAST:event_jTFPNombreMouseReleased

    private void jTFPNombreFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFPNombreFocusLost
        // TODO add your handling code here:
        if (jTFPNombre.getText().isEmpty()){
            jTFPNombre.setText("Ingresa el nombre del producto");
        }
    }//GEN-LAST:event_jTFPNombreFocusLost

    private void jLBuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBuscarMouseClicked
        // TODO add your handling code here:
        if (!jLBuscar.isEnabled()){
            return;
        }
        BUSCANDO = true;
        int fsMin = jTFPStockMin.getText().equals("MIN")?FILTRO_MIN:Integer.valueOf(jTFPStockMin.getText());
        int fsMax = jTFPStockMax.getText().equals("MAX")?FILTRO_MAX:Integer.valueOf(jTFPStockMax.getText());
        int fpMin = jTFPPrecioMin.getText().equals("MIN")?FILTRO_MIN:Integer.valueOf(jTFPPrecioMin.getText());
        int fpMax = jTFPPrecioMax.getText().equals("MAX")?FILTRO_MAX:Integer.valueOf(jTFPPrecioMax.getText());
        
        if (fsMin > fsMax){
            JOptionPane.showMessageDialog(this, "El numero "+ fsMin +" no puede ser mayor al establecido como MAX("+fsMax+"). ");
            return;
        }else if (fsMax < fsMin){
            JOptionPane.showMessageDialog(this, "El numero "+ fsMax +" no puede ser menor al establecido como MIN("+fsMin+"). ");
            return;
        }else if (fpMin > fpMax){
            JOptionPane.showMessageDialog(this, "El numero "+ fsMin +" no puede ser mayor al establecido como MAX("+fsMax+"). ");
            return;
        }else if (fpMax < fpMin){
            JOptionPane.showMessageDialog(this, "El numero "+ fsMax +" no puede ser menor al establecido como MIN("+fsMin+"). ");
            return;
        }
        
        eliminarFilas();

        String texto = jTFPNombre.getText().toLowerCase();
        for (Producto prod : pData.listarProductosXFiltros(
                jCBFPNombre.isSelected()?jTFPNombre.getText().toLowerCase():"",fsMin+"",fsMax+"",fpMin+"",fpMax+""
        )) {
           modelo.addRow(new Object[]{
           prod.getIdProducto(),
           prod.getNombre(),
           prod.getStock(),
           "$"+prod.getPrecio(),
           prod.isDisponible() == true ? "Si " : "No "
           });
        }
        if (jTProductos.getRowCount() == 0){
            JOptionPane.showMessageDialog(this, "No se han encontrado productos. ");
        }
    }//GEN-LAST:event_jLBuscarMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel LimpiarBtn;
    private javax.swing.JPanel agregarBtn;
    private javax.swing.JPanel buscarBtn;
    private javax.swing.JPanel eliminarBtn;
    private javax.swing.JCheckBox jCBFPNombre;
    private javax.swing.JCheckBox jCBFPPrecio;
    private javax.swing.JCheckBox jCBFPStock;
    private javax.swing.JLabel jLAgregar;
    private javax.swing.JLabel jLBuscar;
    private javax.swing.JLabel jLEliminar;
    private javax.swing.JLabel jLFPNombre;
    private javax.swing.JLabel jLFPPrecio;
    private javax.swing.JLabel jLFPPrecioAdd;
    private javax.swing.JLabel jLFPStock;
    private javax.swing.JLabel jLFPStockAdd;
    private javax.swing.JLabel jLLimpiar;
    private javax.swing.JLabel jLModificar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTFPNombre;
    private javax.swing.JTextField jTFPPrecioMax;
    private javax.swing.JTextField jTFPPrecioMin;
    private javax.swing.JTextField jTFPStockMax;
    private javax.swing.JTextField jTFPStockMin;
    private javax.swing.JTable jTProductos;
    private javax.swing.JPanel modificarBtn;
    // End of variables declaration//GEN-END:variables

    private void cabeceraTabla() {
        modelo.addColumn("Id Producto");
        modelo.addColumn("Nombre");
        modelo.addColumn("Stock");
        modelo.addColumn("Precio");
        modelo.addColumn("Disponible");

        jTProductos.setModel(modelo);

        //Centrar títulos de la tabla
        DefaultTableCellRenderer headerRenderer = (DefaultTableCellRenderer) jTProductos.getTableHeader().getDefaultRenderer();
        headerRenderer.setHorizontalAlignment(SwingConstants.CENTER);
        //Centrar contenido de tabla
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);
        jTProductos.setDefaultRenderer(Object.class, centerRenderer);
    }

    public void cargarTabla() {
        eliminarFilas();
        for (Producto producto : pData.listarProductos()) {
            modelo.addRow(new Object[]{
            producto.getIdProducto(),
            producto.getNombre(),
            producto.getStock(),
            "$"+producto.getPrecio(),
            producto.isDisponible() == true ? "Si " : "No "
            });
        }
        jTProductos.getColumnModel().getColumn(2).setCellRenderer(new ColorearStock());
    }

    private void eliminarFilas() {
        int filas = jTProductos.getRowCount() - 1;
        for (; filas >= 0; filas--) {
            modelo.removeRow(filas);
        }
    }
    
    private void desactivarFiltros() {
        //Desactiva JLebels
        jLFPNombre.setEnabled(false);
        jLFPStock.setEnabled(false);
        jLFPStockAdd.setEnabled(false);
        jLFPPrecio.setEnabled(false);
        jLFPPrecioAdd.setEnabled(false);
        //Desactiva Botones
        buscarBtn.setEnabled(false);
        jLBuscar.setEnabled(false);
        LimpiarBtn.setEnabled(false);
        jLLimpiar.setEnabled(false);
        //Desactiva TextFields
        jTFPNombre.setEnabled(false);
        jTFPStockMax.setEnabled(false);
        jTFPStockMin.setEnabled(false);
        jTFPPrecioMax.setEnabled(false);
        jTFPPrecioMin.setEnabled(false);
        //Desactiva CheckBox
        jCBFPNombre.setSelected(false);
        jCBFPStock.setSelected(false);
        jCBFPPrecio.setSelected(false);
    }
    
    private void filtroSeleccionado(){
        if (jCBFPNombre.isSelected() || jCBFPStock.isSelected() || jCBFPPrecio.isSelected()){
            buscarBtn.setEnabled(true);
            jLBuscar.setEnabled(true);
            LimpiarBtn.setEnabled(true);
            jLLimpiar.setEnabled(true);
        }else{
            buscarBtn.setEnabled(false);
            jLBuscar.setEnabled(false);
            LimpiarBtn.setEnabled(false);
            jLLimpiar.setEnabled(false);
        }
    }
    
    private boolean checkFiltroNum(int t){ // CHECK SOLO NUMEROS EN INT
        if (!(t == 8 || t == 10 || t == 27 || (t >= 48 && t <= 57))){
            JOptionPane.showMessageDialog(this, "Solo puedes ingresar numeros. ");
            return false;
        }
        return true;
    }
    
    private boolean numTFVerificacion(String cad){ // CHECK SOLO NUMEROS EN STRING
        byte[] t = cad.getBytes(StandardCharsets.US_ASCII);
        for (int i = 0; i < cad.length(); i++) {
            if (!(t[i] == 8 || t[i] == 10 || t[i] == 27 || (t[i] >= 48 && t[i] <= 57))){
                return false;
            }
        }
        return true;
    }
    
    private boolean checkFiltroMenorMayor(int m, int M, String v){
        if (m > M){
            if (v.equals("MAX")){
                if (!BUSCANDO){
                    JOptionPane.showMessageDialog(this, "El numero "+ m +" no puede ser mayor al establecido como MAX("+M+"). ");
                }
                return false;
            }else{
                if (!BUSCANDO){
                    JOptionPane.showMessageDialog(this, "El numero "+ M +" no puede ser menor al establecido como MIN("+m+"). ");
                }
                return false;
            }
        }
        return true;
    }
   
    private String correccionFiltros(String s, String t, String typet, int valuetypet){
        try{
            if (s.isEmpty() || t.isEmpty()) {
                return "";
            }
            
            if (typet.equals("MAX")){
                if (!checkFiltroMenorMayor(Integer.valueOf(s),t.equals(typet)?valuetypet:Integer.valueOf(t),typet)){
                    return t.equals(typet)?valuetypet-1+"":Integer.valueOf(t)-1+"";
                }  
            }
            else if (typet.equals("MIN")) {
                if (!checkFiltroMenorMayor(t.equals(typet)?valuetypet:Integer.valueOf(t),Integer.valueOf(s),typet)){
                    return t.equals(typet)?valuetypet+1+"":Integer.valueOf(t)+1+"";
                }
            }
            
            BUSCANDO = false;
            return s;
        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(this,"Error. Ingrese el numero nuevamente. ");
            return "";
        }
    }
}
